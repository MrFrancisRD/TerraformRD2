##### working with output on terraform ########

terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "5.53.0"
    }
  }
}
# Configure the AWS Provider
provider "aws" {

 # profile = "default"
  region  = "us-east-1"
}

####  Resource ######

resource "aws_instance" "nginx-server" {
  ami           = "ami-00beae93a2d981137"
  instance_type = "t2.micro"

###### Installing nginx in aws machine ##########
  user_data = <<-EOF
              #!/bin/bash
              sudo yum install -y nginx
              sudo systemctl enable nginx
              sudo systemctl start nginx
              EOF

  # link resource to ssh since my EC2 Instance
  key_name = aws_key_pair.nginx-server-ssh.key_name

  # link SG resource

  vpc_security_group_ids = [ aws_security_group.nginx-server-sg.id ]

  # adding tags aws EC2 Instance
  tags = {
    Name = "nginx-server"
    Environment = "dev"
    Owner = "myemployeess@mysoftwareRD.com"
    Team = "Devops"
    Project = "Webinar-Caosbinario-Terraform"
  }
}

#adding ssh key to my EC2 Instance

resource "aws_key_pair" "nginx-server-ssh" {
  key_name = "nginx-server-ssh"
  public_key = file("nginx-server.key.pub")

   # adding tags ssh key pair
  tags = {
    Name = "nginx-server-ssh"
    Environment = "dev"
    Owner = "myemployeess@mysoftwareRD.com"
    Team = "Devops"
    Project = "Webinar-Caosbinario-Terraform"
  }
  
}

############ SG (Security Group) ##########

resource "aws_security_group" "nginx-server-sg" {

  name = "nginx-server-sg"
  description = "Security group allowing SSH and HTTP access"

   ingress {
    from_port   = 22 #accept all port in
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  
  egress {
    from_port        = 0 # accept all port out
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
  }

# adding tags out aws SG
tags = {
    Name = "nginx-server-sg"
    Environment = "dev"
    Owner = "myemployeess@mysoftwareRD.com"
    Team = "Devops"
    Project = "Webinar-Caosbinario-Terraform"
  }
  
}

######### Output on Terraform ###############

# Get Public IP

output "server_output_ip" {

  description = "Public Ip Address of instancia EC2"
  value = aws_instance.nginx-server.public_ip
  
}

# Get Public DNS

output "server_output_dns" {

  description = "Public DNS aws instance EC2"
  value = aws_instance.nginx-server.public_dns
  
}
